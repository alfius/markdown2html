#!/usr/bin/env ruby

require 'html/pipeline'
require 'gollum-export'

# get the output directory parameter
output_directory = nil
if o_index = ARGV.index('-o')
  output_directory = ARGV[o_index + 1]
end

# detect mode
if ARGV.length == 0
  # help mode
  puts 'Usage:'
  puts '  gollum-export plataformatec/devise'
  puts '  gollum-export file1.md file2.md ...'
elsif ARGV.any? {|f| f =~ /\.md$/}
  # file mode
  ARGV.each do |file|
    next unless file =~ /\.md$/
    puts "Converting #{file}..."
    Gollum::Export::Processor.convert_file(file, :output_directory => output_directory)
  end
else
  # github mode
  repository = ARGV[0]
  wiki_repository = "#{repository}.wiki"
  directory = wiki_repository.split('/')[1]
  output_directory ||= "#{directory}_html"

  unless Dir.exists?(directory)
    clone_command = "git clone git://github.com/#{wiki_repository}.git"
    puts "> #{clone_command}"
    fail unless system(clone_command)
  end

  unless Dir.exists?(output_directory)
    mkdir_command = "mkdir #{output_directory}"
    puts "> #{mkdir_command}"
    fail unless system(mkdir_command)
  end

  Dir.glob("#{directory}/**/*.md").each do |file|
    puts "Converting #{file}..."
    Gollum::Export::Processor.convert_file(file, :output_directory => output_directory, :repository => repository)
  end
end
